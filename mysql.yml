---
- hosts: all
  become: yes
  become_method: sudo
  become_user: root
 
  vars:
    # Required field
    dbaas_version: "<%=customOptions.dbaasVersion%>"
    
    # Default superuser values if no custom inputs provided
    default_username: "root"
    default_password: "root"
    default_dbname: "mysql"
    
    # Use custom inputs if defined, otherwise use defaults
    dbaas_username: "<%=customOptions.dbaasUsername%>"
    dbaas_password: "<%=customOptions.dbaasPassword%>"
    db_name: "<%=customOptions.dbName%>"

  pre_tasks:
    - name: Verify database version is provided
      fail:
        msg: "Database version is required"
      when: not dbaas_version or dbaas_version == ''

    - name: Set default values if inputs are empty
      set_fact:
        dbaas_username: "{{ default_username if not dbaas_username or dbaas_username == '' }}"
        dbaas_password: "{{ default_password if not dbaas_password or dbaas_password == '' }}"
        db_name: "{{ default_dbname if not db_name or db_name == '' }}"

    - name: Set privileges based on user type
      set_fact:
        user_privileges: "{{ '*.*:ALL,GRANT' if dbaas_username == default_username else db_name + '.*:ALL' }}"
 
  tasks:
   - name: Install required packages
     apt:
       name:
         - sudo
         - acl
         - python3-pip
         - python3-mysqldb
       state: present
       update_cache: yes
 
   - name: Install MySQL Server
     apt:
       name:
         - mysql-server
         - mysql-client
       state: present
       update_cache: yes
 
   - name: Ensure MySQL is running
     systemd:
       name: mysql
       state: started
       enabled: yes
 
   - name: Create application database
     mysql_db:
       name: "{{ db_name }}"
       state: present
       login_unix_socket: /var/run/mysqld/mysqld.sock
     when: db_name != "mysql"
 
   - name: Create database user
     mysql_user:
       name: "{{ dbaas_username }}"
       password: "{{ dbaas_password }}"
       priv: "{{ user_privileges }}"
       host: '%'
       state: present
       login_unix_socket: /var/run/mysqld/mysqld.sock
 
   - name: Allow remote connections
     replace:
       path: /etc/mysql/mysql.conf.d/mysqld.cnf
       regexp: '^bind-address\s*=\s*127\.0\.0\.1'
       replace: 'bind-address = 0.0.0.0'
     notify: Restart MySQL
 
  handlers:
   - name: Restart MySQL
     systemd:
       name: mysql
       state: restarted
