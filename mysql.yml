---
- hosts: all
  become: yes
  become_method: sudo
  become_user: root
 
  vars:
    # Hardcoded database values
    db_name: "wordpress_db"
    db_user: "wordpress_user"
    db_password: "StrongPassword123!"
 
  tasks:
   - name: Install required packages
     apt:
       name:
         - sudo
         - acl
         - python3-pip
         - python3-mysqldb
         - ufw
       state: present
       update_cache: yes
 
   - name: Install MySQL Server and Client
     apt:
       pkg:
         - mysql-server
         - mysql-client
       state: present
       update_cache: yes
 
   - name: Ensure MySQL is running
     systemd:
       name: mysql
       state: started
       enabled: yes
 
   - name: Allow MySQL port in UFW
     ufw:
       rule: allow
       port: '3306'
       proto: tcp
 
   - name: Create application database
     mysql_db:
       name: "{{ db_name }}"
       state: present
       login_unix_socket: /var/run/mysqld/mysqld.sock
 
   - name: Create database user
     mysql_user:
       name: "{{ db_user }}"
       password: "{{ db_password }}"
       priv: "{{ db_name }}.*:ALL,GRANT"
       host: '%'
       state: present
       login_unix_socket: /var/run/mysqld/mysqld.sock
 
   - name: Allow remote connections - bind address
     replace:
       path: /etc/mysql/mysql.conf.d/mysqld.cnf
       regexp: '^bind-address\s*=\s*127\.0\.0\.1'
       replace: 'bind-address = 0.0.0.0'
     notify: Restart MySQL
 
   - name: Ensure MySQL port is set
     lineinfile:
       path: /etc/mysql/mysql.conf.d/mysqld.cnf
       regexp: '^port\s*='
       line: 'port = 3306'
       insertafter: '[mysqld]'
     notify: Restart MySQL
 
   - name: Update MySQL configuration for remote access
     blockinfile:
       path: /etc/mysql/mysql.conf.d/mysqld.cnf
       block: |
         skip-external-locking
         skip-name-resolve
       insertafter: '[mysqld]'
     notify: Restart MySQL
 
   - name: Flush MySQL privileges
     command: mysql -e "FLUSH PRIVILEGES;"
     
   - name: Get server IP address
     shell: hostname -I | awk '{print $1}'
     register: server_ip
     
   - name: Create connection info file
     copy:
       dest: /opt/mysql_connection.json
       content: |
         {
           "mysql_host": "{{ server_ip.stdout }}",
           "mysql_database": "{{ db_name }}",
           "mysql_user": "{{ db_user }}",
           "mysql_password": "{{ db_password }}"
         }
       mode: '0644'
     
   - name: Print connection information
     debug:
       msg: 
         - "MySQL setup complete."
         - "Database name: {{ db_name }}"
         - "Username: {{ db_user }}"
         - "Password: {{ db_password }}"
         - "MySQL Server IP: {{ server_ip.stdout }}"
 
  handlers:
   - name: Restart MySQL
     systemd:
       name: mysql
       state: restarted
