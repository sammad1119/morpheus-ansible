---
- hosts: all
  become: yes
  become_method: sudo
  become_user: root
  vars:
    db_version: "{{ morpheus['customOptions']['dbaasVersion'] }}"
    db_name: "{{ morpheus['customOptions']['dbName'] }}"
    db_user: "{{ morpheus['customOptions']['dbaasUsername'] }}"
    db_password: "{{ morpheus['customOptions']['dbaasPassword'] }}"
    db_root_password: "{{ morpheus['customOptions']['dbRootPassword'] }}"
 
  tasks:
   - name: Install required packages
     apt:
       name:
         - sudo
         - acl
         - lsb-release
         - ca-certificates
         - curl
       state: present
       update_cache: yes
   - name: Create keyrings directory
     file:
       path: /etc/apt/keyrings
       state: directory
       mode: '0755'
   - name: Add PostgreSQL signing key
     shell: |
       curl -fsSL https://www.postgresql.org/media/keys/ACCC4CF8.asc | gpg --dearmor -o /etc/apt/keyrings/postgresql.gpg
     args:
       creates: /etc/apt/keyrings/postgresql.gpg
   - name: Add PostgreSQL repository
     apt_repository:
       repo: "deb [signed-by=/etc/apt/keyrings/postgresql.gpg] http://apt.postgresql.org/pub/repos/apt {{ ansible_distribution_release }}-pgdg main"
       state: present
       filename: postgresql
       update_cache: yes
   - name: Install PostgreSQL packages
     apt:
       pkg:
         - "postgresql-{{ db_version }}"
         - "postgresql-contrib-{{ db_version }}"
         - python3-pip
       state: present
       update_cache: yes
   - name: Install Python PostgreSQL dependencies
     pip:
       name: psycopg2-binary
       state: present
   - name: Ensure PostgreSQL service running
     systemd:
       name: postgresql
       state: started
       enabled: yes
   - name: Set postgres user password
     become_user: postgres
     postgresql_user:
       name: postgres
       password: "{{ db_root_password }}"
   - name: Create root superuser
     become_user: postgres
     postgresql_user:
       name: root
       password: "{{ db_root_password }}"
       role_attr_flags: SUPERUSER,CREATEDB,CREATEROLE,INHERIT,LOGIN
       state: present
   - name: Update pg_hba.conf for password authentication
     become_user: postgres
     postgresql_pg_hba:
       dest: "/etc/postgresql/{{ db_version }}/main/pg_hba.conf"
       contype: local
       databases: all
       users: all
       method: md5
     notify: Restart PostgreSQL
   - name: Create application database
     become_user: postgres
     postgresql_db:
       name: "{{ db_name }}"
       state: present
   - name: Create database user
     become_user: postgres
     postgresql_user:
       name: "{{ db_user }}"
       password: "{{ db_password }}"
       state: present
   - name: Grant database privileges
     become_user: postgres
     postgresql_privs:
       type: database
       database: "{{ db_name }}"
       roles: "{{ db_user }}"
       privs: ALL
   - name: Configure remote PostgreSQL authentication
     become_user: postgres
     postgresql_pg_hba:
       dest: "/etc/postgresql/{{ db_version }}/main/pg_hba.conf"
       contype: host
       databases: all
       users: all
       address: 0.0.0.0/0
       method: md5
       create: true
     notify: Restart PostgreSQL
   - name: Update postgresql.conf to listen on all addresses
     lineinfile:
       path: "/etc/postgresql/{{ db_version }}/main/postgresql.conf"
       regexp: '^#?listen_addresses\s*='
       line: "listen_addresses = '*'"
     notify: Restart PostgreSQL
  handlers:
   - name: Restart PostgreSQL
     systemd:
       name: postgresql
       state: restarted
