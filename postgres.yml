---
- hosts: all
  gather_facts: yes
  become: yes
  become_user: sudo
  pre_tasks:
    - name: Check for held packages
      shell: sudo apt-mark showhold
      register: held_packages
      changed_when: false

    - name: Unhold any held packages
      shell: sudo apt-mark unhold {{ item }}
      loop: "{{ held_packages.stdout_lines }}"
      when: held_packages.stdout_lines|length > 0
      changed_when: true

    - name: Clean package cache
      command: |
        sudo apt-get clean
        sudo apt-get update
      changed_when: true

    - name: "Install required PostgreSQL packages"
      apt:
        name:
          - postgresql-12
          - postgresql-contrib-12
        state: present
        update_cache: true

    - name: "Install Python Pip"
      package:
        name: python3-pip
        state: present

    - name: "Install Python packages"
      pip:
        name:
          - psycopg2-binary
        state: present

  tasks: 
    - name: "Start and enable services"
      service:
        name: postgresql
        state: started
        enabled: yes

    - name: set postgresql listen addresses
      block:
      - name: get postgresql listen addresses
        set_fact:
          pgdg_ip_addresses: "{{ ansible_default_ipv4.address }}, localhost"
    
      - name: configure postgresql listen addresses
        lineinfile:
          dest: "/etc/postgresql/12/main/postgresql.conf"
          regexp: "^#?listen_addresses.+$"
          line: "listen_addresses = '{{ pgdg_ip_addresses }}'"
          state: present
          mode: 0600
        notify: restart postgres

    - name: "Create app database"
      postgresql_db:
        state: present
        name: "demodb"
      become: yes
      become_user: postgres

    - name: "Create db user"
      postgresql_user:
        state: present
        name: "demouser"
        password: "demodb"
      become: yes
      become_user: postgres

    - name: "Grant db user access to app db"
      postgresql_privs:
        type: database
        database: "demodb"
        roles: "demouser"
        grant_option: no
        privs: all
      become: yes
      become_user: postgres

    - name: "Allow md5 connection for the db user"
      postgresql_pg_hba:
        dest: "/etc/postgresql/12/main/pg_hba.conf"
        address: all
        contype: host
        databases: all
        method: md5
        users: "demouser"
        create: true
      become: yes
      become_user: postgres
      notify: restart postgres

  handlers:
    - name: restart postgres
      service:
        name: postgresql
        state: restarted
