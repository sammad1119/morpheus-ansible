---
- hosts: all
  become: yes
  become_method: sudo
  become_user: root
  
  vars:
    # Use the version variable from Morpheus
    sql_version: "{{ morpheus['customOptions']['dbaasVersion'] }}"
    # Use the root password for SA
    sa_password: "{{ morpheus['customOptions']['dbRootPassword'] }}"
 
  tasks:
    - name: Install prerequisites
      apt:
        name:
          - curl
          - gnupg2
          - apt-transport-https
        state: present
        update_cache: yes
    
    - name: Create keyrings directory
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'
    
    - name: Download Microsoft GPG key
      get_url:
        url: https://packages.microsoft.com/keys/microsoft.asc
        dest: /tmp/microsoft.asc
        mode: '0644'
    
    - name: Import Microsoft GPG key
      shell: |
        cat /tmp/microsoft.asc | gpg --dearmor > /etc/apt/keyrings/microsoft.gpg
        chmod 644 /etc/apt/keyrings/microsoft.gpg
      args:
        creates: /etc/apt/keyrings/microsoft.gpg
    
    # Determine the correct repository based on SQL Server version
    - name: Set repo facts based on SQL version
      set_fact:
        repo_url: "{{ 
          'https://packages.microsoft.com/ubuntu/18.04/mssql-server-2017 bionic' 
            if sql_version.startswith('14') else
          'https://packages.microsoft.com/ubuntu/18.04/mssql-server-2019 bionic'
            if sql_version.startswith('15') else
          'https://packages.microsoft.com/ubuntu/22.04/mssql-server-2022 jammy' 
        }}"
    
    - name: Add SQL Server repository
      apt_repository:
        repo: deb [arch=amd64 signed-by=/etc/apt/keyrings/microsoft.gpg] {{ repo_url }} main
        state: present
        filename: mssql-server
    
    - name: Add Microsoft tools repository
      apt_repository:
        repo: deb [arch=amd64 signed-by=/etc/apt/keyrings/microsoft.gpg] https://packages.microsoft.com/ubuntu/18.04/prod bionic main
        state: present
        filename: msprod
        update_cache: yes
    
    - name: Install SQL Server
      apt:
        name: mssql-server
        state: present
      environment:
        ACCEPT_EULA: "Y"
        MSSQL_SA_PASSWORD: "{{ sa_password }}"
    
    - name: Install SQL Server command-line tools
      apt:
        name:
          - mssql-tools
          - unixodbc-dev
        state: present
      environment:
        ACCEPT_EULA: "Y"
    
    - name: Stop SQL Server before configuration
      systemd:
        name: mssql-server
        state: stopped
    
    - name: Configure SQL Server with new SA password
      shell: |
        /opt/mssql/bin/mssql-conf set-sa-password
      environment:
        MSSQL_SA_PASSWORD: "{{ sa_password }}"
        ACCEPT_EULA: "Y"
    
    - name: Start SQL Server
      systemd:
        name: mssql-server
        state: started
        enabled: yes
    
    - name: Wait for SQL Server to be ready
      wait_for:
        port: 1433
        timeout: 60
    
    - name: Verify SQL Server version
      shell: |
        export PATH=$PATH:/opt/mssql-tools/bin
        sqlcmd -S localhost -U SA -P "{{ sa_password }}" -Q "SELECT @@VERSION"
      register: sql_version_output
    
    - name: Display SQL Server version
      debug:
        var: sql_version_output.stdout_lines
