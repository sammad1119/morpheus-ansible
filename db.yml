---
- hosts: all
  become: yes
  vars:
    dbaas_version: "{{ morpheus['customOptions']['dbaasVersion'] }}"
    dbaas_username: "{{ morpheus['customOptions']['dbaasUsername'] }}"
    dbaas_password: "{{ morpheus['customOptions']['dbaasPassword'] }}"
    db_name: "{{ morpheus['customOptions']['dbName'] }}"
    mongodb_packages:
      - mongodb-org-server
      - mongodb-org-mongos
      - mongodb-org-database
      - mongodb-org-tools

  tasks:
    - name: Unhold any existing packages
      shell: apt-mark unhold {{ item }} || true
      loop: "{{ mongodb_packages }}"
      ignore_errors: yes

    - name: Install system prerequisites
      apt:
        pkg:
          - wget
          - gnupg
          - software-properties-common
          - apt-transport-https
          - python3-pip
        state: present
        update_cache: yes

    - name: Install required Python packages
      pip:
        name:
          - pymongo
          - "pymongo[srv]"
        state: present

    - name: Import MongoDB GPG key
      apt_key:
        url: "https://www.mongodb.org/static/pgp/server-{{ dbaas_version }}.asc"
        state: present

    - name: Add MongoDB repository
      apt_repository:
        repo: "deb [arch=amd64] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/{{ dbaas_version }} multiverse"
        state: present
        filename: mongodb-org

    - name: Clean package cache
      command: apt-get clean
      changed_when: false

    - name: Update package cache
      apt:
        update_cache: yes

    - name: Install MongoDB packages
      apt:
        name: "{{ mongodb_packages }}"
        state: present
        force: yes

    - name: Hold MongoDB packages
      shell: apt-mark hold {{ item }}
      loop: "{{ mongodb_packages }}"
      ignore_errors: yes

    - name: Ensure MongoDB service is started and enabled
      systemd:
        name: mongod
        state: started
        enabled: yes

    - name: Wait for MongoDB to start
      wait_for:
        port: 27017
        delay: 10
        timeout: 30

    - name: Create MongoDB admin user
      shell: |
        mongosh admin --eval '
        db.createUser({
          user: "{{ dbaas_username }}",
          pwd: "{{ dbaas_password }}",
          roles: [ { role: "root", db: "admin" } ]
        });'
      ignore_errors: yes

    - name: Create application database
      shell: |
        mongosh admin -u "{{ dbaas_username }}" -p "{{ dbaas_password }}" --eval '
        db.getSiblingDB("{{ db_name }}").createCollection("init")'
      ignore_errors: yes

    - name: Update MongoDB configuration for remote access
      lineinfile:
        path: /etc/mongod.conf
        regexp: '  bindIp: 127.0.0.1'
        line: '  bindIp: 0.0.0.0'
      notify: Restart MongoDB

  handlers:
    - name: Restart MongoDB
      systemd:
        name: mongod
        state: restarted
